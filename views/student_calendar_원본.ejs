
<!DOCTYPE html>
<html lang="ko">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Test1</title>
    <meta name="author" content="name">
    <meta name="description" content="description here">
    <meta name="keywords" content="keywords,here">

    <link href="https://cdn.jsdelivr.net/npm/tailwindcss/dist/tailwind.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.3.1/css/all.css">
    <link rel="dns-prefetch" href="//unpkg.com" />
	  <link rel="dns-prefetch" href="//cdn.jsdelivr.net" />
	  <link rel="stylesheet" href="https://unpkg.com/tailwindcss@^1.0/dist/tailwind.min.css">
    <link href="https://unpkg.com/tailwindcss/dist/tailwind.min.css" rel="stylesheet"> <!--Replace with your tailwind.css once created-->
    <link href="https://afeld.github.io/emoji-css/emoji.css" rel="stylesheet"> <!--Totally optional :) -->

    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.bundle.min.js" integrity="sha256-xKeoJ50pzbUGkpQxDYHD7o7hxe0LaOGeguUidbq6vis=" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/gh/alpinejs/alpine@v2.x.x/dist/alpine.js" defer></script>

    <style>
          @import url('https://fonts.googleapis.com/css?family=Karla:400,700&display=swap');
          .font-family-karla { font-family: karla; }
          .circle-red{border-radius : 50%;  background-color : #FF0000; width : 25px; height : 25px; float : right; margin : 10px; border : 5px; font-size:10px; text-align : center; line-height: 23px; }
          .circle-blue{border-radius : 50%;  background-color : #4299E1; width : 25px; height : 25px; float : right; margin : 10px; border : 5px; font-size:10px; text-align : center; line-height: 23px;}
          .circle-y{border-radius : 50%;  background-color :#FFBF00; width : 25px; height : 25px; float : right; margin : 10px; border : 5px; font-size:10px; text-align : center; line-height: 23px;}
          .bg-sidebar { background: #3d68ff; }
          .cta-btn { color: #3d68ff; }
          .upgrade-btn { background: #1947ee; }
          .upgrade-btn:hover { background: #0038fd; }
          .active-nav-link { background: #1947ee; }
          .nav-item:hover { background: #1947ee; }
          .account-link:hover { background: #3d68ff; }
          [x-cloak] { display: none; }
      </style>
</head>

<body class="bg-white font-sans leading-normal tracking-normal mt-12">

    <!--Nav-->
    <nav class="pt-2 md:pt-1 pb-1 px-1 mt-0 h-auto fixed w-full z-20 top-0 bg-cover" style="background-color:#edf2f7">

        <div class="flex flex-wrap items-center">
            <div class="flex w-full pt-8 content-center justify-center md:justify-center text-black px-2">
                <a href="index.html">
                    <img src="https://upload.wikimedia.org/wikipedia/ko/archive/a/a8/20120125011215%21Chosun-basic1.png"
                        alt="조선대학교 로고" width=300px height=120px href="index.html">
                </a>
            </div>

            <div class="flex w-full pt-1 content-center justify-between md:justify-end">
                <ul class="list-reset flex justify-between flex-1 md:flex-none items-center">
                <li class="flex-1 md:flex-none md:mr-3">
                    <div class="relative inline-block">
                        <button onclick="toggleDD('myDropdown')"
                            class="drop-button text-black focus:outline-none font-semibold text-xs"> Hi,
                            <%= result[0].prof_name %> <svg class="h-3 fill-current inline" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path d="M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z"/></svg></button>
                            <div id="myDropdown" class="dropdownlist w-32 absolute bg-gray-900 text-black right-0 mt-3 p-3 overflow-auto z-30 invisible">
                                <a href="#" class="p-2 hover:bg-gray-800 text-white text-sm no-underline hover:no-underline block"><i class="fas fa-sign-out-alt fa-fw"></i> Log Out</a>
                            </div>
                    </div>
                </li>
                </ul>
            </div>
        </div>

           </nav>
           <div class="flex flex-col md:flex-row">

              <div class="shadow-lg h-full fixed bottom-0 mt-8 md:relative md:h-full z-10 w-full md:w-40" style="background-color: #084B8A;">
                 <div class="md:mt-24 w-40 md:w-40 md:fixed md:left-0 h-full md:top-5 content-center md:content-start text-left justify-between">
                   <div class="p-6 w-40 shadow text-xl text-white" style="background-color: #084B8A;">
                    <h3 class="font-bold pl-2">과목 목록</h3>
                    </div>

                    <ul
               class="h-full list-reset flex-row w-40 flex-start absolute md:flex-col py-0 md:py-3 px-1 md:px-2 text-center md:text-left" style="background-color: #084B8A;">
               <% for (var i = 0; i < names.length; i++) { %>
               <%if(names[i]!="no"){%>
               <li class="mr-3 flex-1">
                  <!-- <form method="post" action="/public/subjectlist"> -->
                  <a id=<%= result[i].subject_name %>
                     href='/process/subjectlist?search=<%=result[i].subject_name%>'
                     class="block py-1 md:py-3 pl-0 md:pl-1 align-middle text-white no-underline hover:text-red-500 border-b-2 border-gray-800 hover:border-read-500">
                     <span
                        class="pb-1 md:pb-0 hover:text-red-500 text-xs md:text-base text-white md:text-white block md:inline-block"><%= names[i]%></span>
                  </a>
                  <!-- </form> -->
               </li>
               <%} %>
               <%}%>
                </ul>
                
            </div>


        </div>

        <div class="main-content bg-gray-100 mt-16 md:mt-13 pb-24 pl-3 md:pb-5 w-full">

            <div class="p-6 shadow mt-1 text-xl text-white" style="background-color: #084B8A;">
                <h3 class="font-bold text-2xl pl-2" id="top">Calendar</h3>
            </div>

            <div class="flex flex-wrap">
              <div class="w-full pl-6">
                  <!-- source: https://tailwindcomponents.com/component/calendar-ui-with-tailwindcss-and-alpinejs -->
                  <div class="antialiased sans-serif bg-gray-100">
                      <div x-data="app()" x-init="[initDate(), getNoOfDays()]" x-cloak>
                          <div class="container py-2">
                              <div class="bg-white rounded-lg shadow overflow-hidden">
                                  <div class="flex items-center justify-between py-2 px-6">
                                      <div>
                                          <span x-text="MONTH_NAMES[month]" class="text-lg font-bold text-gray-800"></span>
                                          <span x-text="year" class="ml-1 text-lg text-gray-600 font-normal"></span>
                                      </div>
                                      <div style="margin-left : 800px"><div class="circle-blue text-white "> <b>출석</b> </div><div class="circle-red text-white"><b> 결석</b> </div><div class="circle-y text-white"><b>지각</b></div></div>
                                      <div class="border rounded-lg px-1" style="padding-top: 2px;">
                                          <button
                                              type="button"
                                              class="leading-none rounded-lg transition ease-in-out duration-100 inline-flex cursor-pointer hover:bg-gray-200 p-1 items-center"
                                              :class="{'cursor-not-allowed opacity-25': month == 0 }"
                                              @click="if(month == 0){month=11; year--}else{month--}; getNoOfDays()">
                                              <svg class="h-6 w-6 text-gray-500 inline-flex leading-none"  fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"/>
                                              </svg>
                                          </button>
                                          <div class="border-r inline-flex h-6"></div>
                                          <button
                                              type="button"
                                              class="leading-none rounded-lg transition ease-in-out duration-100 inline-flex items-center cursor-pointer hover:bg-gray-200 p-1"
                                              :class="{'cursor-not-allowed opacity-25': month == 11 }"
                                              @click="if(month == 11) {month=0; year++} else{month++}; getNoOfDays()">
                                              <svg class="h-6 w-6 text-gray-500 inline-flex leading-none"  fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
                                              </svg>
                                          </button>
                                      </div>
                                  </div>

                                  <div class="-mx-1 -mb-1">
                                      <div class="flex flex-wrap" style="margin-bottom: -40px;">
                                          <template x-for="(day, index) in DAYS" :key="index">
                                              <div style="width: 14.26%" class="px-2 py-2">
                                                  <div
                                                      x-text="day"
                                                      class="text-gray-600 text-sm uppercase tracking-wide font-bold text-center"></div>
                                              </div>
                                          </template>
                                      </div>

                                      <div class="flex flex-wrap border-t border-l">
                                          <template x-for="blankday in blankdays">
                                              <div
                                                  style="width: 14.28%; height: 120px"
                                                  class="text-center border-r border-b px-4 pt-2"
                                              ></div>
                                          </template>
                                          <template x-for="(date, dateIndex) in no_of_days" :key="days+'key'">
                                              <div style="width: 14.28%; height: 120px" class="px-4 pt-2 border-r border-b relative">
                                                  <div
                                                      @click="showEventModal(date)"
                                                      x-text="date"
                                                      class="inline-flex w-6 h-6 items-center justify-center cursor-pointer text-center leading-none rounded-full transition ease-in-out duration-100 absolute"
                                                      :class="{'bg-gray-500 text-white': isToday(date) == true, 'text-gray-700 hover:bg-blue-200': isToday(date) == false }"
                                                  ></div>
                                                  <template x-for="event in events.filter(e => new Date(e.event_date).toDateString() ===  new Date(year, month, date).toDateString() )">
                                                      <div
                                                          @click="showEventModal(date)"
                                                          x-text="date"
                                                          class="inline-flex w-6 h-6 items-center justify-center cursor-pointer text-center  leading-none rounded-full transition ease-in-out duration-100 absolute"
                                                          :class="{
                                                              'border-blue-500 bg-blue-500 text-white': event.event_color === '0',
                                                              'border-red-500 bg-red-500 text-white': event.event_color === '1',
                                                              'border-yellow-500 bg-yellow-500 text-white': event.event_color === '3',
                                                          }"
                                                      >
                                                      </div>
                                                  </template>
                                                  <div style="height: 80px;" class="overflow-y-auto mt-1">
                                                      <!--<template x-for="event in events.filter(e => new Date(e.event_date).toDateString() ===  new Date(year, month, date).toDateString() )">
                                                          <div
                                                              class="px-2 py-1 rounded-lg mt-1 overflow-hidden border"
                                                              :class="{
                                                                  'border-blue-200 bg-blue-100': event.event_color === 'blue',
                                                                  'border-red-200 bg-red-100': event.event_color === 'red',
                                                                  'border-yellow-200 bg-yellow-100': event.event_color === 'yellow',
                                                              }"
                                                          >
                                                          </div>
                                                      </template>-->
                                                  </div>
                                              </div>
                                          </template>
                                      </div>
                                  </div>
                              </div>
                          </div>

                          <div style=" background-color: rgba(0, 0, 0, 0.8)" class="fixed z-40 top-0 right-0 left-0 bottom-0 h-full w-full" x-show.transition.opacity="openEventModal">
                              <div class="p-4 max-w-xl mx-auto relative absolute left-0 right-0 overflow-hidden mt-24">
                                  <div class="shadow absolute right-0 top-0 w-10 h-10 rounded-full bg-white text-gray-500 hover:text-gray-800 inline-flex items-center justify-center cursor-pointer"
                                      x-on:click="openEventModal = !openEventModal">
                                      <svg class="fill-current w-6 h-6" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
                                          <path
                                              d="M16.192 6.344L11.949 10.586 7.707 6.344 6.293 7.758 10.535 12 6.293 16.242 7.707 17.656 11.949 13.414 16.192 17.656 17.606 16.242 13.364 12 17.606 7.758z" />
                                      </svg>
                                  </div>

                                  <div class="shadow w-full rounded-lg bg-white overflow-hidden w-full block p-8">

                                      <h2 class="font-bold text-2xl mb-6 text-gray-800 border-b pb-2">출석으로 바꾸시겠습니까?</h2>

                                      <div class="mb-4">
                                          <label class="text-gray-800 block mb-1 font-bold text-sm tracking-wide">Event date</label>
                                          <input class="bg-gray-200 appearance-none border-2 border-gray-200 rounded-lg w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-blue-500" type="text" x-model="event_date" readonly>
                                      </div>

                                      <div class="inline-block w-64 mb-4">
                                          <label class="text-gray-800 block mb-1 font-bold text-sm tracking-wide">Select a color</label>
                                          <div class="relative">
                                              <select @change="event_color = $event.target.value;" x-model="event_color" class="block appearance-none w-full bg-gray-200 border-2 border-gray-200 hover:border-gray-500 px-4 py-2 pr-8 rounded-lg leading-tight focus:outline-none focus:bg-white focus:border-blue-500 text-gray-700">
                                                      <template x-for="(color, index) in colors">
                                                          <option :value="color.value" x-text="color.label"></option>
                                                      </template>

                                              </select>
                                              <div class="pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700">
                                              <svg class="fill-current h-4 w-4" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path d="M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z"/></svg>
                                              </div>
                                          </div>
                                      </div>

                                      <div class="mt-8 text-right">
                                          <button class="bg-gray-800 hover:bg-gray-700 text-white font-semibold py-2 px-4 border border-gray-300 rounded-lg shadow-sm mr-2" @click="addEvent()">
                                              Yes
                                          </button>
                                          <button class="bg-white hover:bg-gray-100 text-gray-700 font-semibold py-2 px-4 border border-gray-700 rounded-lg shadow-sm" @click="openEventModal = !openEventModal">
                                              No
                                          </button>
                                      </div>
                                  </div>
                              </div>
                          </div>
                      </div>
                    </div>
                  </div>
              </div>
          </main>
      </div>
      <!-- AlpineJS -->
  <script src="https://cdn.jsdelivr.net/gh/alpinejs/alpine@v2.x.x/dist/alpine.min.js" defer></script>
  <!-- Font Awesome -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.13.0/js/all.min.js" integrity="sha256-KzZiKy0DWYsnwMF+X1DvQngQ2/FxF7MF3Ff72XcpuPs=" crossorigin="anonymous"></script>

  <script>
  const MONTH_NAMES = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
  const DAYS = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];

  function app() {
    return {
     showDatepicker: false,
     datepickerValue:'',

      month: '',
      year: '',
      no_of_days: [],
      blankdays: [],
      days: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],

      events: [
        {
          event_date: new Date(2020, 10, 3),
          event_color: '0'
        },


      ],
      event_date: '',
      event_color: '0',

      colors: [
        {
          value: '0',
          label: "출석"
        },
        {
          value: '1',
          label: "결석"
        },
        {
          value: '3',
          label: "지각"
        }
      ],

      openEventModal: false,

      initDate() {
        let today = new Date();
        this.month = today.getMonth();
        this.year = today.getFullYear();
        this.datepickerValue = new Date(this.year, this.month, today.getDate()).toDateString();
      },

      isToday(date) {
        const today = new Date();
        const d = new Date(this.year, this.month, date);

        return today.toDateString() === d.toDateString() ? true : false;
        },

    /*  getDateValue(date) {

        let selectedDate = new Date(this.year, this.month, date);
        this.datepickerValue = selectedDate.toDateString();

        this.$refs.date.value = selectedDate.getFullYear() +"-"+ ('0'+ (selectedDate.getMonth() + 1)).slice(-2) +"-"+ ('0' + selectedDate.getDate()).slice(-2);

        console.log(this.$refs.date.value);

        this.showDatepicker = false;
      },
*/
      showEventModal(date) {
        // open the modal
        this.openEventModal = true;
        let selectedDate = new Date(this.year, this.month, date);
        this.datepickerValue = selectedDate.toDateString();
        this.event_date = this.datepickerValue;
        this.$refs.date.value = selectedDate.getFullYear() +"-"+ ('0'+ (selectedDate.getMonth() + 1)).slice(-2) +"-"+ ('0' + selectedDate.getDate()).slice(-2);

        console.log(this.$refs.date.value);

        this.showDatepicker = false;

      },

      addEvent() {

        const x = this.events.findIndex(a => a.event_date === this.event_date);

        if(x != -1){
        this.events.splice(x, 1,{
          event_date: this.event_date,
          event_color: this.event_color
        });
        }
        else{
        this.events.push({
          event_date: this.event_date,
          event_color: this.event_color
        });
}
        console.log(this.events);

        // clear the form data
        this.event_date = '';
        this.event_color = '0';

        //close the modal
        this.openEventModal = false;
      },

      getNoOfDays() {
        let daysInMonth = new Date(this.year, this.month + 1, 0).getDate();

        // find where to start calendar day of week
        let dayOfWeek = new Date(this.year, this.month).getDay();
        let blankdaysArray = [];
        for (var i=1; i <= dayOfWeek; i++) {
          blankdaysArray.push(i);
        }

        let daysArray = [];
        for (var i=1; i <= daysInMonth; i++) {
          daysArray.push(i);
        }

        this.blankdays = blankdaysArray;
        this.no_of_days = daysArray;
      }
    }
  }
</script>
<script>
    /*Toggle dropdown list*/
    function toggleDD(myDropMenu) {
        document.getElementById(myDropMenu).classList.toggle("invisible");
    }
    /*Filter dropdown options*/
    function filterDD(myDropMenu, myDropMenuSearch) {
        var input, filter, ul, li, a, i;
        input = document.getElementById(myDropMenuSearch);
        filter = input.value.toUpperCase();
        div = document.getElementById(myDropMenu);
        a = div.getElementsByTagName("a");
        for (i = 0; i < a.length; i++) {
            if (a[i].innerHTML.toUpperCase().indexOf(filter) > -1) {
                a[i].style.display = "";
            } else {
                a[i].style.display = "none";
            }
        }
    }
    // Close the dropdown menu if the user clicks outside of it
    window.onclick = function(event) {
        if (!event.target.matches('.drop-button') && !event.target.matches('.drop-search')) {
            var dropdowns = document.getElementsByClassName("dropdownlist");
            for (var i = 0; i < dropdowns.length; i++) {
                var openDropdown = dropdowns[i];
                if (!openDropdown.classList.contains('invisible')) {
                    openDropdown.classList.add('invisible');
                }
            }
        }
    }

    var openmodal = document.querySelectorAll('.modal-open')
for (var i = 0; i < openmodal.length; i++) {
 openmodal[i].addEventListener('click', function(event){
 event.preventDefault()
 toggleModal()
 })
}

//let overlay = document.querySelector('.modal-overlay')
//overlay.addEventListener('click', toggleModal)

var closemodal = document.querySelectorAll('.modal-close')
for (var i = 0; i < closemodal.length; i++) {
 closemodal[i].addEventListener('click', toggleModal)
}

document.onkeydown = function(evt) {
 evt = evt || window.event
 var isEscape = false
 if ("key" in evt) {
 isEscape = (evt.key === "Escape" || evt.key === "Esc")
 } else {
 isEscape = (evt.keyCode === 27)
 }
 if (isEscape && document.body.classList.contains('modal-active')) {
 toggleModal()
 }
};


function toggleModal () {
 const body = document.querySelector('body')
 const modal = document.querySelector('.modal')
 modal.classList.toggle('opacity-0')
 modal.classList.toggle('pointer-events-none')
 body.classList.toggle('modal-active')
}
</script>
</body>

</html>
